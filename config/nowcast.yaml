# System configuration file for Salish Sea Nowcast system

# System status checklist file
checklist file: $(NOWCAST.ENV.NOWCAST_LOGS)/nowcast_checklist.yaml

# Python interpreter in environment with all dependencies installed
python: $(NOWCAST.ENV.NOWCAST_ENV)/bin/python

# Filesystem group name to use for ownership of newly created files
file group: sallen


# Workers scheduled to run at specific times
scheduled workers:
  # Worker module name (fully qualified, dotted notation)
  - nowcast.workers.download_weather:
      # Time period for worker launch repetition
      every: day
      # Time at which to launch the worker
      # (quotes are required to ensure that time is interpreted as a string)
      at: '04:15'
      # Optional command-line options for the worker
      # (quotes are necessary to force interpretation as a string)
      cmd line opts: '06'
  - nowcast.workers.download_weather:
      every: day
      at: '10:30'
      cmd line opts: '12'
  - nowcast.workers.download_live_ocean:
      every: day
      at: '13:00'
  - nowcast.workers.download_weather:
      every: day
      at: '17:00'
      cmd line opts: '18'
  - nowcast.workers.download_weather:
      every: day
      at: '23:00'
      cmd line opts: '00'


coordinates: /results/nowcast-sys/NEMO-forcing/grid/coordinates_seagrid_SalishSea.nc
## TODO: Different values are necessary on skookum and west.cloud; see issue #31
#coordinates: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/coordinates_seagrid_SalishSea.nc


weather:
  # Destination directory for downloaded GEM 2.5km operational model GRIB2 files
  GRIB dir: /results/forcing/atmospheric/GEM2.5/GRIB/
  # Location of wgrib2 executable
  wgrib2: /results/nowcast-sys/private-tools/grib2/wgrib2/wgrib2
  # Location of Pramod Thupaki's grid_defn.pl script
  grid_defn.pl: /results/nowcast-sys/private-tools/PThupaki/grid_defn.pl
  # Destination directory for NEMO forcing files generated from GRIB2 files
  ops dir: /results/forcing/atmospheric/GEM2.5/operational/
  # Template for the atmospheric forcing file name
  # **Must be quoted to project {} characters**
  file template: 'ops_{:y%Ym%md%d}.nc'


rivers:
  # File containing daily average Fraser river flow at Hope
  ECget Fraser flow: /data/dlatorne/SOG-projects/SOG-forcing/ECget/Fraser_flow
  # Monthly climatology
  monthly climatology: /results/nowcast-sys/NEMO-forcing/rivers/rivers_month_extended.nc
  # File that describes Fraser River climatology separation from measured
  # flow at Hope
  Fraser climatology: /results/nowcast-sys/tools/I_ForcingFiles/Rivers/FraserClimatologySeparation.yaml
  # Destination directory for river runoff forcing file
  rivers dir: /results/forcing/rivers/
  # Templates for the runoff forcing file names
  # **Must be quoted to project {} characters**
  file templates:
    long: 'RLonFraCElse_{:y%Ym%md%d}.nc'



ssh:
  # Directory containing tidal predication file for sea surface height correction
  tidal predictions: /results/nowcast-sys/tools/SalishSeaNowcast/tidal_predictions/
  # Destination directory for Neah Bay sea surface height open boundary files
  ssh dir: /results/forcing/sshNeahBay/
  # Template for the sea surface height forcing file name
  # **Must be quoted to project {} characters**
  file template: 'ssh_{:y%Ym%md%d}.nc'


temperature salinity:
  download:
    # URL from which to download UW Live Ocean forecast fields files
    url: https://pm2.blob.core.windows.net/
    # Directory name prefix for UW Live Ocean forecast fields files
    directory prefix: f
    # Template for hourly UW Live Ocean fields file name
    # **Must be quoted to project {} characters**
    file template: 'ocean_his_{hh:04d}.nc'
    # Range of forecast hours for which to download UW Live Ocean files
    hours range: [2, 73]
    # Destination directory for downloaded UW Live Ocean files
    dest dir: /results/forcing/LiveOcean/downloaded


observations:
  # Storage directory for ONC ferry instruments data .mat files
  ferry data: /ocean/jieliu/research/meopar/ONC_ferries/

  # ONC Strait of Georgia nodes real-time CTD data
  ctd data:
    # ONC node station names to download data from
    stations:
      ##- SCVIP  # offline as of early Oct-2016
      - SEVIP
      - LSBBL
      - USDDL
    # Destination directory for ONC CTD T&S data netCDF files
    dest dir: /results/observations/ONC/CTD/
    # Template for ONC CTD T&S data file path
    # **Must be quoted to project {} characters**
    filepath template: '{station}/{station}_CTD_15m_{yyyymmdd}.nc'


run types:
  # Keys are run types to execute, values are NEMO configuration name,
  # bathymetry, and mesh mask to use.
  # Note that forecast requires a nowcast to have been completed,
  # and forecast2 requires a forecast to have been completed.
  nowcast:
    config name: SalishSea
    bathymetry: /results/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
    mesh mask: /results/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
## TODO: Different values are necessary on skookum and west.cloud; see issue #32
#    bathymetry: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
#    mesh mask: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
    duration: 1  # day
  nowcast-green:
    config name:  SOG
    bathymetry: /results/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
    mesh mask: /results/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
    duration: 1  # day
  forecast:
    config name:  SalishSea
    bathymetry: /results/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
    mesh mask: /results/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
## TODO: Different values are necessary on skookum and west.cloud; see issue #32
#    bathymetry: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
#    mesh mask: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
    duration: 1.25  # days
  forecast2:
    config name:  SalishSea
    bathymetry: /results/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
    mesh mask: /results/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
## TODO: Different values are necessary on skookum and west.cloud; see issue #32
#    bathymetry: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/bathy_downonegrid2.nc
#    mesh mask: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/mesh_mask_downbyone2.nc
    duration: 1.25  # days


results archive:
  # Keys are run types.
  # Values are directories on results server where run results are stored
  # in ddmmmyy/ directories.
  nowcast: /results/SalishSea/nowcast-blue/
  forecast: /results/SalishSea/forecast/
  forecast2: /results/SalishSea/forecast2/
  nowcast-green: /results/SalishSea/nowcast-green/
  hindcast: /results/SalishSea/hindcast/


# Notifications to ERDDAP server that datasets have been updated
erddap:
  # Directory in which to create flag files to signal ERDDAP server that
  # datasets have been updated
  flag dir: /results/erddap/flag/
  datasetIDs:
    # Keys are types of datasets that have been updated
    # Must match dataset command-line argument in ping_erddap worker
    download_weather:
      # List of ERDDAP dataset ids to create flag files for to signal updates
      # to ERDDAP server
      - ubcSSaSurfaceAtmosphereFieldsV1
    SCVIP-CTD:
      - ubcONCSCVIPCTD15mV1
    SEVIP-CTD:
      - ubcONCSEVIPCTD15mV1
    LSBBL-CTD:
      - ubcONCLSBBLCTD15mV1
    USDDL-CTD:
      - ubcONCUSDDLCTD15mV1
    nowcast:
      - ubcSSn3DTracerFields1hV16-10
      - ubcSSnSurfaceTracerFields1hV16-10
      - ubcSSn3DuVelocity1hV16-10
      - ubcSSn3DvVelocity1hV16-10
      - ubcSSn3DwVelocity1hV16-10
      - ubcSSnCampbellRiverSSH15mV16-10
      - ubcSSnCherryPointSSH15mV16-10
      - ubcSSnFridayHarborSSH15mV16-10
      - ubcSSnNanaimoSSH15mV16-10
      - ubcSSnNeahBaySSH15mV16-10
      - ubcSSnPointAtkinsonSSH15mV16-10
      - ubcSSnSandheadsSSH15mV16-10
      - ubcSSnVictoriaSSH15mV16-10


figures:
  # Pacific Now-West coastline polygons file
  coastline: /ocean/rich/more/mmapbase/bcgeo/PNW.mat
  # Timezone to use in model results figures
  ## TODO: Consider changing figures code to use arrow.to('local') as make_feeds worker does
  timezone: Canada/Pacific
  # Directory behind the https://salishsea.eos.ubc.ca/nowcast-sys/figures/
  # static web server that figure files are to be copied to and requested from
  storage path: /results/nowcast-sys/figures/
  # Directory under storage path where most recent storm surge alerts thumbnail
  # image is stored
  storm surge info portal path: storm-surge/
  # Filename root for the storm surge alerts thumbnail image.
  # _dmy.png is appended for the version stored in the run results figures/ directory
  # An undated .png version of the most recently generated one is stored in
  # for use on the Strm Surge Information Portal page.
  storm surge alerts thumbnail: Website_thumbnail


# Storm surge alerts ATOM feeds
storm surge feeds:
  # Directory under figures[storage path][storm surge info portal path] where
  # feed XML files are stored
  storage path: atom
  domain: salishsea.eos.ubc.ca
  feed entry template: storm_surge_advisory.mako
  feeds:
    pmv.xml:
      title: SalishSeaCast Storm Surge Alerts for Port Metro Vancouver
      city: Vancouver
      tide gauge stn: Point Atkinson
      tidal predictions: 'Point Atkinson_tidal_prediction_01-Jan-2013_31-Dec-2020.csv'


run:
  enabled hosts:
    # Compute host name key below where directories, etc. for that host are
    # defined
    west.cloud-nowcast:
      # Does the host share storage with the machine where the nowcast manager
      # is running?
      shared storage: False
      # Passphrase-less deployment key used by automation for authentication
      # on the host.
      # The key-pair is assumed to be stored in $USER/.ssh/.
      ssh key: SalishSeaNEMO-nowcast_id_rsa
      # Location on the compute host of the file that contains IP addresses
      # and MPI slots specifications.
      # Only required for runs on ONC west.cloud cluster.
      mpi hosts file: ${HOME}/mpi_hosts
      # IP address of the machineto run XIOS on.
      # Only required for runs on ONC west.cloud cluster.
      xios host: 192.168.1.53
      # Location of bash script that sets nowcast system environment variables.
      # The script will be sourced as a prefix to worker launch commands on
      # the host
      envvars: /nemoShare/MEOPAR/nowcast-sys/nemo_nowcast-env/etc/conda/activate.d/envvars.sh
      # Python interpreter on compute host in an environment with all
      # dependencies installed. Used to, for example, launch run_NEMO and
      # watch_NEMO workers.
      python: /nemoShare/MEOPAR/nowcast-sys/nemo_nowcast-env/bin/python3
      # Location on the compute host of the nowcast system config file
      config file: /nemoShare/MEOPAR/nowcast-sys/SalishSeaNowcast/config/nowcast.yaml
      # List of run types that are executed on the compute host
      run types:
        - nowcast
        - forecast
        - forecast2
    salish-nowcast:
      shared storage: True
      ssh key: SalishSeaNEMO-nowcast_id_rsa
      envvars: /results/nowcast-sys/nemo_nowcast-env/etc/conda/activate.d/envvars.sh
      python: /results/nowcast-sys/nemo_nowcast-env/bin/python
      config file: /results/nowcast-sys/SalishSeaNowcast/config/nowcast.yaml
      run types:
        - nowcast-green

  remote hosts:
    - cloud host
    - hpc host

  # If the `cloud host` key is present, the nowcast, forecast,
  # and forecast2 runs executed on it automatically.
  #
  # Remove or comment out the next line to prevent running in the cloud
  cloud host: west.cloud-nowcast
  west.cloud-nowcast:
    forcing:
      # Directory on compute host where Neah Bay sea surface height forcing files
      # are stored
      ssh dir: /nemoShare/MEOPAR/sshNeahBay/
      # Directory on compute host where rivers runoff forcing files are stored
      rivers dir: /nemoShare/MEOPAR/rivers/
      # Locations on compute host of rivers runoff monthly climatology files
      rivers_month.nc: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/rivers/rivers_month_extended.nc
      rivers_temp.nc: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/rivers/river_ConsTemp_month.nc
      # Directory on compute host where atomospheric forcing files are stored
      weather dir: /nemoShare/MEOPAR/GEM2.5/ops/NEMO-atmos/
      # Location on compute host of no_snow.nc constraint file
      no_snow.nc: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/atmospheric/no_snow.nc
      # Location on compute host of NEMO on-the-fly interpolation weights file
      # for GEM 2.5km operational forecast
      weights: /nemoShare/MEOPAR/nowcast-sys/NEMO-forcing/grid/weights-gem2.5-ops.nc
    # Directory on compute host where run configuration, forcing links, etc.
    # are stored
    nowcast dir: /nemoShare/MEOPAR/nowcast-sys/runs
    # Directories on compute host where results are stored, keyed by run type
    results:
      # Note that salish has shared storage with the nowcast system results
      # archives
      nowcast: /nemoShare/MEOPAR/SalishSea/nowcast/
      forecast: /nemoShare/MEOPAR/SalishSea/forecast/
      forecast2: /nemoShare/MEOPAR/SalishSea/forecast2/
    # Directory on compute host where files (e.g. namelist.time) and symlinks
    # (e,g. iodef.xml) necessary to prepare the NEMO runs are stored
    # TODO: Can this and `nowcast dir` be merged; see issue #11
    run prep dir: /nemoShare/MEOPAR/nowcast-sys/runs
    # How is the domain to be distributed over the processors in the
    # i (longitude) and j (latitude) directions?
    mpi decomposition: 9x19
    # Path to the salishsea command processor executable to use in the run
    # script
    salishsea_cmd: /nemoShare/MEOPAR/nowcast-sys/nemo_nowcast-env/bin/salishsea
    # Executable to use to submit the SalishSeaNEMO.sh script to be run
    job exec cmd: bash

  # If the `nowcast-green host` key is present, the forcing files will be
  # symlinked and the nowcast-green run will be executed on it automatically.
  # It is assumed that the nowcast-green run shares storage with the machine
  # that the nowcast manager is running on, so uploading or forcing files,
  # and downloaded of results files is not necessary.
  #
  # Remove or comment out the next line to prevent running nowcast-green
  nowcast-green host: salish-nowcast
  salish-nowcast:
    forcing:
      # Directory on compute host where Neah Bay sea surface height forcing files
      # are stored
      ssh dir: /results/forcing/sshNeahBay/
      # Directory on compute host where rivers runoff forcing files are stored
      rivers dir: /results/forcing/rivers/
      # Locations on compute host of rivers runoff monthly climatology files
      rivers_month.nc: /results/nowcast-sys/NEMO-forcing/rivers/rivers_month_extended.nc
      rivers_temp.nc: /results/nowcast-sys/NEMO-forcing/rivers/river_ConsTemp_month.nc
      # Directory on compute host where the rivers runoff daily tracers
      # climatology files are stored
      rivers bio dir: /results/nowcast-sys/NEMO-forcing/rivers/bio_climatology/
      # Directory on compute host where atomospheric forcing files are stored
      weather dir: /results/forcing/atmospheric/GEM2.5/operational/
      # Location on compute host of no_snow.nc constraint file
      no_snow.nc: /results/nowcast-sys/NEMO-forcing/atmospheric/no_snow.nc
      # Location on compute host of NEMO on-the-fly interpolation weights file
      # for GEM 2.5km operational forecast
      weights: /results/nowcast-sys/NEMO-forcing/grid/weights-gem2.5-ops.nc
    # Directory on compute host where run configuration, forcing links, etc.
    # are stored
    nowcast dir: /data/dlatorne/MEOPAR/nowcast-green/
    # Directories on compute host where results are stored, keyed by run type
    results:
      # Note that salish has shared storage with the nowcast system results
      # archives
      nowcast-green: /results/SalishSea/nowcast-green/
    # Directory on compute host where files (e.g. namelist.time) and symlinks
    # (e,g. iodef.xml) necessary to prepare the NEMO runs are stored
    # TODO: Can this and `nowcast dir` be merged; see issue #11
    run prep dir: /results/nowcast-sys/runs/
    # How is the domain to be distributed over the processors in the
    # i (longitude) and j (latitude) directions?
    mpi decomposition: 1x7
    # Wall-clock time requested for the run. It limits the time that the job
    # will run for on all machines, and it also affects queue priority for
    # runs on Westgrid machines.
    walltime: 23:30:00
    # Path to the salishsea command processor executable to use in the run
    # script
    salishsea_cmd: /results/nowcast-sys/nemo_nowcast-env/bin/salishsea
    # Email address to which to send notifications of the beginning and
    # end of execution of the run, as well as notification of abnormal abort
    # messages.
    email: sallen@eos.ubc.ca
    # Executable to use to submit the SalishSeaNEMO.sh script to be run
    job exec cmd: qsub


  hindcast host: jasper-nowcast
  jasper-nowcast:
    results:
      hindcast: /home/sallen/MEOPAR/SalishSea/hindcast/


  # If the `hpc host` key is present, the forcing files will be uploaded
  # to the HPC cluster and the symlinks created ready for the runs to be
  # prepared and queued at the command-line on the cluster.
  #
  # Remove or comment out the next line to prevent running on the HPC cluster
#  hpc host: orcinus-nowcast
  orcinus-nowcast:
    forcing:
      # Directory on compute host where Neah Bay sea surface height forcing files
      # are stored
      ssh dir: /home/sallen/MEOPAR/sshNeahBay/
      # Directory on compute host where rivers runoff forcing files are stored
      rivers dir: /home/sallen/MEOPAR/rivers/
      # Locations on compute host of rivers runoff monthly climatology files
      rivers_month.nc: /home/sallen/MEOPAR/NEMO-forcing/rivers/rivers_month_extended.nc
      rivers_temp.nc: /home/sallen/MEOPAR/NEMO-forcing/rivers/river_ConsTemp_month.nc
      # Directory on compute host where atomospheric forcing files are stored
      weather dir: /home/sallen/MEOPAR/GEM2.5/ops/NEMO-atmos/
      # Location on compute host of no_snow.nc constraint file
      no_snow.nc: /home/sallen/MEOPAR/NEMO-forcing/atmospheric/no_snow.nc
      # Location on compute host of NEMO on-the-fly interpolation weights file
      # for GEM 2.5km operational forecast
      weights: /home/sallen/MEOPAR/NEMO-forcing/grid/weights-gem2.5-ops.nc
    # Directory on compute host where run configuration, forcing links, etc.
    # are stored
    nowcast dir: /home/sallen/MEOPAR/nowcast/
    # Directories on compute host where results are stored, keyed by run type
    results:
      # Note that salish has shared storage with the nowcast system results
      # archives
      nowcast: /home/sallen/MEOPAR/SalishSea/nowcast/
      nowcast-green: /home/sallen/MEOPAR/SalishSea/nowcast-green/
      forecast: /home/dlatorne/MEOPAR/SalishSea/forecast/
      forecast2: /home/dlatorne/MEOPAR/SalishSea/forecast2/


# Logging system configuration
logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    simple:
      format: '%(asctime)s %(levelname)s [%(name)s] %(message)s'
  handlers:
    console:
      class: logging.StreamHandler
      # Level 100 disables console logging.
      # Use worker --debug flag to enable console logging.
      level: 100
      formatter: simple
      stream: ext://sys.stdout
    info_text:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: simple
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/nowcast.log
      backupCount: 7
    debug_text:
      class: logging.handlers.RotatingFileHandler
      level: DEBUG
      formatter: simple
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/nowcast.debug.log
      backupCount: 7
    checklist:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: simple
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/checklist.log
      backupCount: 7
    sentry:
      class: raven.handlers.logging.SentryHandler
      level: ERROR
      # dsn will be obtained from SENTRY_DSN environment variable
    wgrib2_text:
      class: logging.FileHandler
      level: DEBUG
      formatter: simple
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/wgrib2.log
      mode: w
    get_NeahBay_ssh_png:
      # **NOTE:** This isn't a handler for Python logging, rather it is a
      # convenient and logical place to define the storage location for the
      # image file that the get_NeahBay_ssh worker generates
      class: logging.FileHandler  # irrevelant
      level: DEBUG  # irrevelant, but accurate
      formatter: simple  # irrevelant
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/NBssh.png  # THE IMPORTANT BIT!!
      mode: w  # irrevelant, but accurate
    grib_to_netcdf_png:
      # **NOTE:** This isn't a handler for Python logging, rather it is a
      # convenient and logical place to define the storage location for the
      # image file that the grib_to_netcdf worker generates
      class: logging.FileHandler  # irrevelant
      level: DEBUG  # irrevelant, but accurate
      formatter: simple  # irrevelant
      filename: $(NOWCAST.ENV.NOWCAST_LOGS)/wg.png  # THE IMPORTANT BIT!!
      mode: w  # irrevelant, but accurate
  loggers:
    wgrib2:
      qualname: wgrib2
      level: DEBUG
      propagate: False
      handlers:
        - wgrib2_text
  root:
    level: DEBUG
    handlers:
     - console
     - info_text
     - debug_text
     - sentry


# Message system
zmq:
  server: skookum.eos.ubc.ca
  ports:
    # traffic between manager and message broker
    manager: 5554
    # traffic between workers and message broker
    workers: 5555

message registry:
  # Message types that the manager process can send and their meanings
  # Don't change this section without making corresponding changes in
  # the nemo_nowcast.manager module of the NEMO_Nowcast package.
  manager:
    ack: message acknowledged
    checklist cleared: system checklist cleared
    unregistered worker: ERROR - message received from unregistered worker
    unregistered message type: ERROR - unregistered message type received from worker
    no after_worker function: ERROR - after_worker function not found in next_workers module

  # Module from which to load :py:func:`after_<worker_name>` functions
  # that provide lists of workers to launch when :kbd:`worker_name` finishes.
  # Use fully qualified, dotted notation.
  next workers module: nowcast.next_workers

  workers:
    # Worker module name
    download_weather:
      # The key in the system checklist that the manager maintains that is to
      # be used to hold message payload information provided by the worker
      checklist key: weather forecast
      # Message types that the worker can send and their meanings
      success 00: 00 weather forecast ready
      failure 00: 00 weather forecast download failed
      success 06: 06 weather forecast ready
      failure 06: 06 weather forecast download failed
      success 12: 12 weather forecast ready
      failure 12: 12 weather forecast download failed
      success 18: 18 weather forecast ready
      failure 18: 18 weather forecast download failed
      crash: download_weather worker crashed

    make_runoff_file:
      checklist key: rivers forcing
      success: rivers forcing ready
      failure: rivers forcing files preparation failed
      crash: make_runoff_file worker crashed

    get_NeahBay_ssh:
      checklist key: Neah Bay ssh
      success nowcast: Neah Bay ssh for nowcast ready
      failure nowcast: Neah Bay sea surface height file prep for nowcast failed
      success forecast: Neah Bay ssh for forecast ready
      failure forecast : Neah Bay sea surface height file prep for forecast failed
      success forecast2: Neah Bay ssh for forecast2 ready
      failure forecast2: Neah Bay sea surface height file prep for forecast2 failed
      crash: get_NeahBay_ssh worker crashed

    grib_to_netcdf:
      checklist key: weather forcing
      success nowcast+: atmospheric nowcast/forecast forcing ready
      failure nowcast+: atmospheric nowcast forcing files preparation failed
      success forecast2: atmospheric forecast2 forcing ready
      failure forecast2: atmospheric forecast2 forcing files preparation failed
      crash: grib_to_netcdf worker crashed

    get_onc_ctd:
      checklist key: ONC CTD data
      success SCVIP: ONC SCVIP station CTD T&S data file created
      success SEVIP: ONC SEVIP station CTD T&S data file created
      success LSBBL: ONC LSBBL station CTD T&S data file created
      success USDDL: ONC USDDL station CTD T&S data file created
      failure: ONC CTD T&S data file creation failed
      crash: get_onc_ctd worker crashed

    download_live_ocean:
      checklist key: Live Ocean products
      success: Live Ocean Salish Sea boundary files ready
      failure: Live Ocean Salish Sea boundary files download failed
      crash: download_live_ocean worker crashed

    upload_forcing:
      checklist key: forcing upload
      success nowcast+: forcing files for nowcast/forecast uploaded
      failure nowcast+: forcing files for nowcast/forecast upload failed
      success forecast2: forcing files for forecast2 uploaded
      failure forecast2: forcing files for forecast2 upload failed
      success ssh: sea surface height forcing files for forecast uploaded
      failure ssh: sea surface height forcing files for forecast upload failed
      crash: upload_forcing worker crashed

    make_forcing_links:
      checklist key: forcing links
      success nowcast+: forcing file links for nowcast/forecast created
      failure nowcast+: forcing file links for nowcast/forecast failed
      success forecast2: forcing file links for forecast2 created
      failure forecast2: forcing file links for forecast2 failed
      success ssh: sea surface height forcing file links for forecast created
      failure ssh: sea surface height forcing file links for forecast failed
      success nowcast-green: forcing file links for nowcast-green created
      failure nowcast-green: forcing file links for nowcast-green failed
      crash: make_forcing_links worker crashed

    run_NEMO:
      checklist key: NEMO run
      log.debug: debug level logging message
      log.info: info level logging message
      log.error: error level logging message
      need: NEMO run information dict requested
      success nowcast: nowcast NEMO run started
      failure nowcast: nowcast NEMO run failed
      success nowcast-green: nowcast-green NEMO run started
      failure nowcast-green: nowcast-green NEMO run failed
      success forecast: forecast NEMO run started
      failure forecast: forecast NEMO run failed
      success forecast2: forecast2 NEMO run started
      failure forecast2: forecast2 NEMO run failed
      crash: run_NEMO worker crashed

    watch_NEMO:
      checklist key: NEMO run
      log.debug: debug level logging message
      log.info: info level logging message
      log.error: error level logging message
      need: NEMO run information dict requested
      success nowcast: nowcast NEMO run completed
      failure nowcast: nowcast NEMO run failed
      success nowcast-green: nowcast-green NEMO run completed
      failure nowcast-green: nowcast-green NEMO run failed
      success forecast: forecast NEMO run completed
      failure forecast: forecast NEMO run failed
      success forecast2: forecast2 NEMO run completed
      failure forecast2: forecast2 NEMO run failed
      crash: watch_NEMO worker crashed

    download_results:
      checklist key: results files
      success nowcast: nowcast results files downloaded
      failure nowcast: nowcast results files download failed
      success forecast: forecast results files downloaded
      failure forecast: forecast results files download failed
      success forecast2: forecast2 results files downloaded
      failure forecast2: forecast2 results files download failed
      success hindcast: hindcast results files downloaded
      failure hindcast: hindcast results files download failed
      crash: download_results worker crashed

    split_results:
      checklist key: results splitting
      success hindcast: hindcast results files split into daily directories
      failure hindcast: hindcast results files splitting into daily directories failed
      crash: split_results worker crashed

    ping_erddap:
      checklist key: ERDDAP flag files
      success nowcast: nowcast ERDDAP dataset flag files created
      failure nowcast: nowcast ERDDAP dataset flag files creation failed
      success forecast: forecast ERDDAP dataset flag files created
      failure forecast: forecast ERDDAP dataset flag files creation failed
      success forecast2: forecast2 ERDDAP dataset flag files created
      failure forecast2: forecast2 ERDDAP dataset flag files creation failed
      success nowcast-green: nowcast-green ERDDAP dataset flag files created
      failure nowcast-green: nowcast-green ERDDAP dataset flag files creation failed
      success download_weather: atmospheric forcing ERDDAP dataset flag files created
      failure download_weather: atmospheric forcing ERDDAP dataset flag files creation failed
      success SCVIP-CTD: ONC SCVIP node CTD ERDDAP dataset flag files created
      failure SCVIP-CTD: ONC SCVIP node CTD ERDDAP dataset flag files creation failed
      success SEVIP-CTD: ONC SEVIP node CTD ERDDAP dataset flag files created
      failure SEVIP-CTD: ONC SEVIP node CTD ERDDAP dataset flag files creation failed
      success LSBBL-CTD: ONC LSBBL node CTD ERDDAP dataset flag files created
      failure LSBBL-CTD: ONC LSBBL node CTD ERDDAP dataset flag files creation failed
      success USDDL-CTD: ONC USDDL node CTD ERDDAP dataset flag files created
      failure USDDL-CTD: ONC USDDL node CTD ERDDAP dataset flag files creation failed
      crash: ping_erddap worker crashed

    make_plots:
      checklist key: plots
      success nowcast publish: nowcast publish plots produced
      success nowcast research: nowcast reseach plots produced
      success nowcast comparison: nowcast comparison plots produced
      failure nowcast publish: nowcast publish plots failed
      failure nowcast research: nowcast research plots failed
      failure nowcast comparison: nowcast comparison plots failed
      success forecast publish: forecast publish plots produced
      failure forecast publish: forecast publish plots failed
      success forecast2 publish: forecast2 publish plots produced
      failure forecast2 publish: forecast2 publish plots failed
      crash: make_plots worker crashed

    make_feeds:
      checklist key: storm surge alert feeds
      success forecast: forecast results ATOM feeds produced
      failure forecast: forecast results ATOM feeds creation failed
      success forecast2: forecast2 results ATOM feeds produced
      failure forecast2: forecast2 results ATOM feeds creation failed
      crash: make_feeds worker crashed

    clear_checklist:
      clear checklist: request that manager clear system state checklist
      success: system state checklist cleared
      failure: system state checklist clearance failed
      crash: clear_checklist worker crashed

    rotate_logs:
      checklist key: log rotation
      success: log files rotated
      failure: log file rotation failed
      crash: rotate_logs worker crashed
