name: CI

on:
  push:
    branches: ['*']

jobs:
  test-coverage:
    name: pytest & coverage report
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
           miniforge-variant: Mambaforge-pypy3
           miniforge-version: latest
           use-mamba: true
           auto-update-conda: false
           auto-activate-base: false
           channels: conda-forge,nodefaults
           channel-priority: true
           python-version: ${{ matrix.python-version }}
           environment-file: envs/environment-test.yaml
           activate-environment: salishsea-nowcast-test

      - name: Install packages
        shell: bash -l {0}
        run: |
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/43ravens/NEMO_Nowcast.git#egg=NEMO_Nowcast
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/UBC-MOAD/moad_tools#egg=moad_tools
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/SalishSeaCast/NEMO-Cmd.git#egg=NEMO-Cmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/SalishSeaCast/SalishSeaCmd.git#egg=SalishSeaCmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable "git+https://github.com/SalishSeaCast/tools#egg=SalishSeaTools&subdirectory=SalishSeaTools"
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/SalishSeaCast/FVCOM-Cmd.git#egg=FVCOM-Cmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@gitlab.com/mdunphy/OPPTools.git@6c784a4dc44dd9030aafe9a8519e5ae0b6cc3183#egg=OPPTools
          python3 -m pip install --editable $GITHUB_WORKSPACE

      - name: show envvars
        shell: bash -l {0}
        run: |
          env

      - name: pytest package with coverage
        shell: bash -l {0}
        run: |
          pytest --cov=$GITHUB_WORKSPACE --cov-report=xml

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Python ${{ matrix.python-version }} pytest & coverage report
          fields: repo,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_SALISHSEACAST_WEBHOOK_URL }}
        if: always()

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
        if: always()
