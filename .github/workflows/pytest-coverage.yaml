name: CI

on:
  push:
    branches:
    - '*'
  pull_request:
    branches:
    - '*'

jobs:
  test-coverage:
    name: pytest & coverage report
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6']

    steps:
      - uses: actions/checkout@v2

      - uses: goanpeca/setup-miniconda@v1
        with:
           auto-update-conda: true
           auto-activate-base: false
           environment-file: envs/environment-test.yaml
           python-version: ${{ matrix.python-version }}
           activate-environment: salishsea-nowcast-test

      - name: Install packages
        shell: bash -l {0}
        run: |
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://github.com/43ravens/NEMO_Nowcast.git#egg=NEMO_Nowcast
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable hg+https://bitbucket.org/UBC_MOAD/moad_tools#egg=moad_tools
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable hg+https://bitbucket.org/salishsea/nemo-cmd#egg=NEMO-Cmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable hg+https://bitbucket.org/salishsea/salishseacmd#egg=SalishSeaCmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable hg+https://bitbucket.org/salishsea/tools#egg=tools&subdirectory=SalishSeaTools
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable hg+https://douglatornell:${{ secrets.BITBUCKET_PASSWORD }}@bitbucket.org/mdunphy/fvcom-cmd#egg=FVCOM-Cmd
          python3 -m pip install --src $GITHUB_WORKSPACE/../vcs_pkgs/ --editable git+https://oauth2:${{ GITLAB_ACCESS_TOKEN }}@gitlab.com/mdunphy/OPPTools.git#egg=OPPTools

          ls $GITHUB_WORKSPACE/../vcs_pkgs/tools/

          python3 -m pip install --editable $GITHUB_WORKSPACE

      - name: pytest package with coverage
        shell: bash -l {0}
        run: |
          pytest --cov=$GITHUB_WORKSPACE/tests --cov-report=xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
